{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAUe,SAASA,EAAOC,GAAQ,IAE/BC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAL8B,EAQVC,oBAAS,GARC,mBAQ3BC,EAR2B,KAQrBC,EARqB,KAclC,OACI,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC5C,yBAAKE,UAAU,gBACVN,EACD,4BACIO,KAAK,SACLD,UAAU,yBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAEpC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAGtD,kBAAC,aAAD,CACIC,eAjBZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAiBDA,MAASA,EACTK,UAAU,sBACVU,QAAW,CACPC,cAAe,EACfC,MAAO,EACPC,KAAOpB,EACPqB,MAAQ,WACRC,aAAc,MCzCnB,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,gBAGkBF,EAD0B,EAG7BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAgB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACCA,IAGAA,KAZwC,mBAGhDvB,EAHgD,KAGzC8B,EAHyC,KAoBvD,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAClD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GCqCJI,MAzDf,WAAgB,IAAD,EAEWb,EAAgB,OAAQ,IAFnC,mBAENc,EAFM,KAEAC,EAFA,OAGSf,EAAgB,MAAO,IAHhC,mBAGNgB,EAHM,KAGDC,EAHC,OAIOjB,EAAgB,KAAM,IAJ7B,mBAINkB,EAJM,KAIFC,EAJE,OAKetC,mBAAS,IALxB,mBAKNuC,EALM,KAKEC,EALF,KAqBb,OAdAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,yDAAD,OAEaP,EAFb,+CAGcE,EAHd,iDAIeE,EAJf,8DAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKlC,UAAU,iBACb,kBAACT,EAAD,CACEE,SAAW,MACXC,YAAc,OACdC,MAASmC,EACTlC,SAAUmC,IAEZ,kBAACxC,EAAD,CACEE,SAAW,MACXC,YAAc,MACdC,MAASqC,EACTpC,SAAUqC,IAEZ,kBAAC1C,EAAD,CACEE,SAAW,aACXC,YAAc,KACdC,MAASuC,EACTtC,SAAUuC,KAGd,yBAAKnC,UAAU,QACb,4BACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCjDjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0c7547fd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Editor(props) {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props;\r\n    \r\n    const [open, setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value){\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-button\"\r\n                    onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange = {handleChange}\r\n                value = {value}\r\n                className=\"code-mirror-wrapper\"\r\n                options = {{\r\n                    lineWrapping : true,\r\n                    lint : true,\r\n                    mode : language,\r\n                    theme : \"material\",\r\n                    lineNumbers : true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = \"codepen-clone\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n\r\n        if(jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n        if(typeof initialValue === \"function\"){\r\n            return initialValue()\r\n        }\r\n        else{\r\n            return initialValue;\r\n        }\r\n    });\r\n    \r\n    useEffect(() =>{\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n    }, [prefixedKey, value]);\r\n\r\n    return [value, setValue];\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Editor from \"./Editor\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nfunction App() {\r\n\r\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n  const [srcDoc, setSrcDoc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() =>{\r\n      setSrcDoc(`\r\n                  <html>\r\n                    <body>${html}</body>\r\n                    <style>${css}</style>\r\n                    <script>${js}</script>\r\n                  </html>\r\n                `);\r\n    }, 250);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [html, css, js]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane top-pane\">\r\n        <Editor\r\n          language = \"xml\"\r\n          displayName = \"HTML\"\r\n          value = {html}\r\n          onChange={setHtml}\r\n        />\r\n        <Editor\r\n          language = \"css\"\r\n          displayName = \"CSS\"\r\n          value = {css}\r\n          onChange={setCss}\r\n        />\r\n        <Editor\r\n          language = \"javascript\"\r\n          displayName = \"JS\"\r\n          value = {js}\r\n          onChange={setJs}\r\n        />\r\n      </div>\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        ></iframe>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}